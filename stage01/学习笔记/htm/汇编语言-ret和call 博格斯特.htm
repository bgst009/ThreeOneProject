<!DOCTYPE html>
<html lang="zh-Hans"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 4.2.1">
  <link rel="apple-touch-icon" sizes="180x180" href="https://bgst007.gitee.io/blog/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="https://bgst007.gitee.io/blog/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="https://bgst007.gitee.io/blog/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="https://bgst007.gitee.io/blog/images/logo.svg" color="#222">

<link rel="stylesheet" href="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/main.css">


<link rel="stylesheet" href="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/all.css">

<script id="hexo-configurations">
    var NexT = window.NexT || {};
    var CONFIG = {"hostname":"bgst007.gitee.io","root":"/blog/","scheme":"Gemini","version":"7.8.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12,"onmobile":false},"copycode":{"enable":false,"show_result":false,"style":null},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"bookmark":{"enable":false,"color":"#222","save":"auto"},"fancybox":false,"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"algolia":{"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"localsearch":{"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}}};
  </script>

  <meta name="description" content="ret 和 call  指令执行过程       通过栈中的数据来修改 cs  和 ip 同时还会 修改栈顶标志 ret（用栈中的数据）  弹栈   近转移 ret 修改 IP pop ip $(ip)=((ss)*16+(sp))$ $(sp)=(sp)+2$   远转移 retf 修改 cs:ip pop ip,pop cs $(ip)=((ss)*16+(sp))$ $(sp)=(sp)+2">
<meta property="og:type" content="article">
<meta property="og:title" content="汇编语言-ret和call">
<meta property="og:url" content="http://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall/index.html">
<meta property="og:site_name" content="博格斯特">
<meta property="og:description" content="ret 和 call  指令执行过程       通过栈中的数据来修改 cs  和 ip 同时还会 修改栈顶标志 ret（用栈中的数据）  弹栈   近转移 ret 修改 IP pop ip $(ip)=((ss)*16+(sp))$ $(sp)=(sp)+2$   远转移 retf 修改 cs:ip pop ip,pop cs $(ip)=((ss)*16+(sp))$ $(sp)=(sp)+2">
<meta property="og:image" content="http://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall/20190928095954.png">
<meta property="article:published_time" content="2020-02-17T14:23:28.000Z">
<meta property="article:modified_time" content="2020-03-23T05:22:15.000Z">
<meta property="article:author" content="xin shen">
<meta property="article:tag" content="归纳">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="http://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall/20190928095954.png">

<link rel="canonical" href="http://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall/">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome : false,
    isPost : true,
    lang   : 'zh-Hans'
  };
</script>

  <title>汇编语言-ret和call | 博格斯特</title>
  






  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<style type="text/css">._th-container ._th-item{margin-bottom:3px;position:relative;width:30px;height:30px;cursor:pointer;opacity:.3;background-color:aquamarine;border-radius:100%;text-align:center;line-height:30px;-webkit-transition:all .35s;-o-transition:all .35s;transition:all .35s;right:30px}._th-container ._th-item._item-x2{margin-left:18px;width:40px;height:40px;line-height:40px}._th-container ._th-item._item-x-2{margin-left:17px;width:38px;height:38px;line-height:38px}._th-container ._th-item._item-x4{width:36px;height:36px;margin-left:16px;line-height:36px}._th-container ._th-item._item-x-4{width:32px;height:32px;line-height:32px;margin-left:14px}._th-container ._th-item._item-reset{width:30px;line-height:30px;height:30px;margin-left:10px}._th-click-hover{position:relative;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s;height:50px;width:50px;cursor:pointer;opacity:.3;border-radius:100%;background-color:aquamarine;text-align:center;line-height:50px;right:0}._th-container:hover{left:-10px}._th-container{font-size:12px;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s;left:-40px;top:20%;position:fixed;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:100000;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}._th-container ._th-item:hover{opacity:.8;background-color:#5fb492;color:aliceblue}._th-container ._th-item:active{opacity:.9;background-color:#316347;color:aliceblue}._th-container:hover ._th-click-hover{opacity:.8}._th-container:hover ._th-item{opacity:.6;right:0}._th-container ._th-click-hover:hover{opacity:.8;background-color:#5fb492;color:aliceblue}._th_cover-all-show-times{position:fixed;top:0;right:0;width:100%;height:100%;z-index:99999;opacity:1;font-weight:900;font-size:30px;color:#4f4f4f;background-color:rgba(0,0,0,0.1)}._th_cover-all-show-times._th_hidden{z-index:-99999;opacity:0;-webkit-transition:1s all;-o-transition:1s all;transition:1s all}._th_cover-all-show-times ._th_times{width:300px;height:300px;border-radius:50%;background-color:rgba(127,255,212,0.51);text-align:center;line-height:300px;position:absolute;top:50%;right:50%;margin-top:-150px;margin-right:-150px;}</style></head>

<body itemscope="" itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope="" itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="https://bgst007.gitee.io/blog/" class="brand" rel="start" style="opacity: 1;">
      <span class="logo-line-before"><i></i></span>
      <h1 class="site-title" style="opacity: 1; top: 0px;">博格斯特</h1>
      <span class="logo-line-after"><i></i></span>
    </a>
      <p class="site-subtitle" itemprop="description" style="opacity: 1; top: 0px;">日常</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
    </div>
  </div>
</div>




<nav class="site-nav">
  <ul id="menu" class="main-menu menu">
        <li class="menu-item menu-item-home" style="opacity: 1; transform: translateY(0px);">

    <a href="https://bgst007.gitee.io/blog/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a>

  </li>
        <li class="menu-item menu-item-tags" style="opacity: 1; transform: translateY(0px);">

    <a href="https://bgst007.gitee.io/blog/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">16</span></a>

  </li>
        <li class="menu-item menu-item-categories" style="opacity: 1; transform: translateY(0px);">

    <a href="https://bgst007.gitee.io/blog/categories/" rel="section"><i class="fa fa-th fa-fw"></i>Categories<span class="badge">6</span></a>

  </li>
        <li class="menu-item menu-item-archives" style="opacity: 1; transform: translateY(0px);">

    <a href="https://bgst007.gitee.io/blog/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">31</span></a>

  </li>
  </ul>
</nav>




</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content post posts-expand">
            

    
  
  
  <article itemscope="" itemtype="http://schema.org/Article" class="post-block" style="opacity: 1; display: block;" lang="zh-Hans">
    <link itemprop="mainEntityOfPage" href="http://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall/">

    <span itemprop="author" itemscope="" itemtype="http://schema.org/Person" hidden="">
      <meta itemprop="image" content="https://gitee.com/bgst007/markdownPicUrl/raw/master/img20200214123014.jpeg">
      <meta itemprop="name" content="xin shen">
      <meta itemprop="description" content="">
    </span>

    <span itemprop="publisher" itemscope="" itemtype="http://schema.org/Organization" hidden="">
      <meta itemprop="name" content="博格斯特">
    </span>
      <header class="post-header" style="opacity: 1; display: block; transform: translateY(0px);">
        <h1 class="post-title" itemprop="name headline">
          汇编语言-ret和call
        </h1>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-calendar"></i>
              </span>
              <span class="post-meta-item-text">Posted on</span>

              <time title="Created: 2020-02-17 22:23:28" itemprop="dateCreated datePublished" datetime="2020-02-17T22:23:28+08:00">2020-02-17</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="far fa-calendar-check"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Modified: 2020-03-23 13:22:15" itemprop="dateModified" datetime="2020-03-23T13:22:15+08:00">2020-03-23</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-folder"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope="" itemtype="http://schema.org/Thing">
                  <a href="https://bgst007.gitee.io/blog/categories/%E7%8E%8B%E7%88%BD%E6%B1%87%E7%BC%96/" itemprop="url" rel="index"><span itemprop="name">王爽汇编</span></a>
                </span>
            </span>

          

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody" style="opacity: 1; display: block; transform: translateY(0px);">

      
        <h1 id="ret-和-call"><a href="#ret-和-call" class="headerlink" title="ret 和 call"></a>ret 和 call</h1><hr>
<ul>
<li>指令执行过程<ul>
<li><img src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/20190928095954.png" class="">

</li>
</ul>
</li>
</ul>
<p><strong>通过栈中的数据来修改 cs  和 ip 同时还会 修改栈顶标志</strong></p>
<h2 id="ret（用栈中的数据）"><a href="#ret（用栈中的数据）" class="headerlink" title="ret（用栈中的数据）"></a>ret（用栈中的数据）</h2><hr>
<ul>
<li><strong>弹栈</strong></li>
</ul>
<ol>
<li>近转移 ret 修改 IP <strong><em>pop ip</em></strong><ol>
<li>$(ip)=((ss)*16+(sp))$</li>
<li>$(sp)=(sp)+2$</li>
</ol>
</li>
<li>远转移 retf 修改 cs:ip <strong><em>pop ip,pop cs</em></strong><ol>
<li>$(ip)=((ss)*16+(sp))$</li>
<li>$(sp)=(sp)+2$</li>
<li>$(cs)=((ss)*16+(sp))$</li>
<li>$(sp)=(sp)+2$</li>
</ol>
</li>
</ol>
<h2 id="call-不能实现短转移"><a href="#call-不能实现短转移" class="headerlink" title="call(不能实现短转移)"></a>call(不能实现短转移)</h2><hr>
<ul>
<li>类似<strong>jmp</strong></li>
<li>call程序处理的数据一般要进行压栈</li>
</ul>
<h3 id="1-根据位移进行转移"><a href="#1-根据位移进行转移" class="headerlink" title="1.根据位移进行转移"></a>1.根据位移进行转移</h3><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push ip</span><br><span class="line">jmp near ptr 标号</span><br></pre></td></tr></tbody></table></div></figure>

<ul>
<li>执行过程 原理<ul>
<li>call下一条指令的IP压栈后，转到标号处</li>
</ul>
</li>
</ul>
<h3 id="2-转移目的地址在指令中"><a href="#2-转移目的地址在指令中" class="headerlink" title="2.转移目的地址在指令中"></a>2.转移目的地址在指令中</h3><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call far ptr</span><br></pre></td></tr></tbody></table></div></figure>

<ul>
<li>执行过程 原理<ul>
<li>call下一条指令的CS:IP压栈后，转到标号处</li>
</ul>
</li>
</ul>
<h3 id="3-转移地址在寄存器中"><a href="#3-转移地址在寄存器中" class="headerlink" title="3.转移地址在寄存器中"></a>3.转移地址在寄存器中</h3><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call 16 位 reg</span><br></pre></td></tr></tbody></table></div></figure>



<ul>
<li>执行过程 原理<ul>
<li>call下一条指令的IP压栈后，转到==reg== 处</li>
</ul>
</li>
</ul>
<h3 id="4-转移地址在内存中"><a href="#4-转移地址在内存中" class="headerlink" title="4. 转移地址在内存中"></a>4. 转移地址在内存中</h3><hr>
<h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call word ptr 内存单元地址</span><br></pre></td></tr></tbody></table></div></figure>

<ul>
<li>执行过程 原理<ul>
<li>call下一条指令的IP压栈后，转到==内存单元地址==</li>
</ul>
</li>
</ul>
<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call dword ptr 内存单元地址</span><br></pre></td></tr></tbody></table></div></figure>

<ul>
<li>执行过程 原理<ul>
<li>call下一条指令的CS:IP压栈后，转到标号处</li>
</ul>
</li>
</ul>
<h2 id="call-和-ret-共同应用"><a href="#call-和-ret-共同应用" class="headerlink" title="call 和 ret 共同应用"></a>call 和 ret 共同应用</h2><hr>
<ul>
<li>就像函数调用</li>
</ul>
<h3 id="批量数据处理"><a href="#批量数据处理" class="headerlink" title="批量数据处理"></a>批量数据处理</h3><hr>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">assume cs:code,ds:data,ss:stack</span><br><span class="line"></span><br><span class="line">data segment</span><br><span class="line">	db 'conversation'</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stack segment</span><br><span class="line">	db 16 dup(0)</span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	start:  mov ax,data</span><br><span class="line">			mov ds,ax</span><br><span class="line">			mov si,0</span><br><span class="line">			mov cx,12</span><br><span class="line">			call capital</span><br><span class="line">			mov ax,4c00h</span><br><span class="line">			int 21h</span><br><span class="line"></span><br><span class="line">	capital: and byte ptr ds:[si],11011111b</span><br><span class="line">			 inc si;</span><br><span class="line">			 loop capital</span><br><span class="line">			 ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></tbody></table></div></figure>

<h3 id="寄存器冲突问题"><a href="#寄存器冲突问题" class="headerlink" title="寄存器冲突问题"></a>寄存器冲突问题</h3><hr>
<ul>
<li>在子程序执行开头，把所需要用到的寄存器压栈</li>
<li>在子程序完成后，从栈中弹出各个寄存其的值</li>
</ul>
<figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">assume cs:code,ds:data,ss:stack</span><br><span class="line"></span><br><span class="line">data segment</span><br><span class="line">	db 'word',0</span><br><span class="line">	db 'unix',0</span><br><span class="line">	db 'wind',0</span><br><span class="line">	db 'good',0</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stack segment</span><br><span class="line">	db 128 dup(0)</span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	start:  mov ax,data</span><br><span class="line">			mov ds,ax</span><br><span class="line"></span><br><span class="line">			mov cx,4</span><br><span class="line">			mov bx,0</span><br><span class="line"></span><br><span class="line">	s:      mov di,bx</span><br><span class="line">			call capital</span><br><span class="line">			add bx,5</span><br><span class="line">			loop s</span><br><span class="line"></span><br><span class="line">			mov ax,4c00h</span><br><span class="line">			int 21h</span><br><span class="line"></span><br><span class="line">	capital: push cx;执行子程序前压栈</span><br><span class="line">			 push si</span><br><span class="line"></span><br><span class="line">	change:	 mov cl,ds:[si]</span><br><span class="line">			 mov ch,0</span><br><span class="line">			 jcxz ok</span><br><span class="line">			 and byte ptr ds:[si],11011111b</span><br><span class="line">			 inc si</span><br><span class="line">			 jmp change</span><br><span class="line"></span><br><span class="line">		ok:	 pop si;执行完后弹栈</span><br><span class="line">			 pop cx</span><br><span class="line">			 ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></tbody></table></div></figure>

<h2 id="mul"><a href="#mul" class="headerlink" title="mul"></a>mul</h2><hr>
<h3 id="1-8位"><a href="#1-8位" class="headerlink" title="1. 8位"></a>1. 8位</h3><hr>
<blockquote>
<p>一个默认放在==AL==，另一个放在==内存字节单元==或者==8位reg==。</p>
<p>结果 默认 ==AX==。</p>
</blockquote>
<h3 id="2-16位"><a href="#2-16位" class="headerlink" title="2. 16位"></a>2. 16位</h3><blockquote>
<p>一个默认放在==AX==，另一个放在==内存字单元==或者==16位reg==。</p>
<p>结果 默认 高位在==DX== ，低位在==AX==。</p>
</blockquote>
<h2 id="模块化程序设计"><a href="#模块化程序设计" class="headerlink" title="模块化程序设计"></a>模块化程序设计</h2><hr>
<ul>
<li>通过==ret==,==call==.</li>
</ul>
<h3 id="参数和结果的传递"><a href="#参数和结果的传递" class="headerlink" title="参数和结果的传递"></a>参数和结果的传递</h3><figure class="highlight plain"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">assume cs:code,ds:data,ss:stack</span><br><span class="line"></span><br><span class="line">data segment</span><br><span class="line">	dw 1,2,3,4,5,6,7,8</span><br><span class="line">	dd 0,0,0,0,0,0,0,0</span><br><span class="line">	db 'word',0</span><br><span class="line">	db 'unix',0</span><br><span class="line">	db 'wind',0</span><br><span class="line">	db 'good',0</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stack segment</span><br><span class="line">	db 128 dup(0)</span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	start:  mov ax,data</span><br><span class="line">			mov ds,ax</span><br><span class="line">			mov si,0</span><br><span class="line">			mov bp,0</span><br><span class="line">			call r_start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			mov ax,4c00h</span><br><span class="line">			int 21h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	r_start:	mov bx,ds:[si]</span><br><span class="line">				call cube</span><br><span class="line">				mov ds:[16+bp],ax</span><br><span class="line">				add si,2</span><br><span class="line">				add bp,4</span><br><span class="line">				loop r_start</span><br><span class="line">				ret</span><br><span class="line"></span><br><span class="line">		cube:	mov ax,bx</span><br><span class="line">				mul bx</span><br><span class="line">				mul bx</span><br><span class="line">				ret</span><br></pre></td></tr></tbody></table></div></figure>

    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="https://bgst007.gitee.io/blog/tags/%E5%BD%92%E7%BA%B3/" rel="tag"># 归纳</a>
          </div>

        


        
    <div class="post-nav">
      <div class="post-nav-item">
    <a href="https://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-%E8%BD%AC%E7%A7%BB%E6%8C%87%E4%BB%A4/" rel="prev" title="汇编语言-转移指令">
      <i class="fa fa-chevron-left"></i> 汇编语言-转移指令
    </a></div>
      <div class="post-nav-item">
    <a href="https://bgst007.gitee.io/blog/2020/02/17/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-%E6%A0%87%E5%BF%97%E5%AF%84%E5%AD%98%E5%99%A8/" rel="next" title="汇编语言-标志寄存器">
      汇编语言-标志寄存器 <i class="fa fa-chevron-right"></i>
    </a></div>
    </div>
      </footer>
    
  </article>
  
  
  



          </div>
          

<script>
  window.addEventListener('tabs:register', () => {
    let { activeClass } = CONFIG.comments;
    if (CONFIG.comments.storage) {
      activeClass = localStorage.getItem('comments_active') || activeClass;
    }
    if (activeClass) {
      let activeTab = document.querySelector(`a[href="#comment-${activeClass}"]`);
      if (activeTab) {
        activeTab.click();
      }
    }
  });
  if (CONFIG.comments.storage) {
    window.addEventListener('tabs:click', event => {
      if (!event.target.matches('.tabs-comment .tab-content .tab-pane')) return;
      let commentClass = event.target.classList[1];
      localStorage.setItem('comments_active', commentClass);
    });
  }
</script>

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar" style="margin-top: 303px;">
    <div class="sidebar-inner affix-top" style="opacity: 1; transform: initial;">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc sidebar-nav-active">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel sidebar-panel-active" style="max-height: 848px; opacity: 1;">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1 active active-current"><a class="nav-link" href="#ret-和-call"><span class="nav-number">1.</span> <span class="nav-text">ret 和 call</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#ret（用栈中的数据）"><span class="nav-number">1.1.</span> <span class="nav-text">ret（用栈中的数据）</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#call-不能实现短转移"><span class="nav-number">1.2.</span> <span class="nav-text">call(不能实现短转移)</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#1-根据位移进行转移"><span class="nav-number">1.2.1.</span> <span class="nav-text">1.根据位移进行转移</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-转移目的地址在指令中"><span class="nav-number">1.2.2.</span> <span class="nav-text">2.转移目的地址在指令中</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#3-转移地址在寄存器中"><span class="nav-number">1.2.3.</span> <span class="nav-text">3.转移地址在寄存器中</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#4-转移地址在内存中"><span class="nav-number">1.2.4.</span> <span class="nav-text">4. 转移地址在内存中</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#1"><span class="nav-number">1.2.4.1.</span> <span class="nav-text">1</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2"><span class="nav-number">1.2.4.2.</span> <span class="nav-text">2</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#call-和-ret-共同应用"><span class="nav-number">1.3.</span> <span class="nav-text">call 和 ret 共同应用</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#批量数据处理"><span class="nav-number">1.3.1.</span> <span class="nav-text">批量数据处理</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#寄存器冲突问题"><span class="nav-number">1.3.2.</span> <span class="nav-text">寄存器冲突问题</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#mul"><span class="nav-number">1.4.</span> <span class="nav-text">mul</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#1-8位"><span class="nav-number">1.4.1.</span> <span class="nav-text">1. 8位</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-16位"><span class="nav-number">1.4.2.</span> <span class="nav-text">2. 16位</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#模块化程序设计"><span class="nav-number">1.5.</span> <span class="nav-text">模块化程序设计</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#参数和结果的传递"><span class="nav-number">1.5.1.</span> <span class="nav-text">参数和结果的传递</span></a></li></ol></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel" style="opacity: 0; max-height: 848px;">
        <div class="site-author motion-element" itemprop="author" itemscope="" itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="xin shen" src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/img20200214123014.jfif">
  <p class="site-author-name" itemprop="name">xin shen</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="https://bgst007.gitee.io/blog/archives/">
        
          <span class="site-state-item-count">31</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="https://bgst007.gitee.io/blog/categories/">
          
        <span class="site-state-item-count">6</span>
        <span class="site-state-item-name">categories</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="https://bgst007.gitee.io/blog/tags/">
          
        <span class="site-state-item-count">16</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>



      </div>

    </div>
  </aside>
  <div id="sidebar-dimmer"></div>


      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

        

<div class="copyright">
  
  © 
  <span itemprop="copyrightYear">2020</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">xin shen</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io/" class="theme-link" rel="noopener" target="_blank">Hexo</a> &amp; <a href="https://theme-next.org/" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a>
  </div>

        








      </div>
    </footer>
  </div>

  
  <script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/anime.js"></script>
  <script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/velocity.js"></script>
  <script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/velocity_002.js"></script>

<script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/utils.js"></script>

<script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/motion.js"></script>


<script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/pisces.js"></script>


<script src="%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-ret%E5%92%8Ccall%20%E5%8D%9A%E6%A0%BC%E6%96%AF%E7%89%B9_files/next-boot.js"></script>




  















  

  



<div><div class="_th-container">
    <div class="_th-click-hover" onclick="changeTime()">
        x1
    </div>
    <div class="_th-item _item-x2" onclick="changeTime(2,0,true)">&gt;</div>
    <div class="_th-item _item-x-2" onclick="changeTime(-2,0,true)">&lt;</div>
    <div class="_th-item _item-x4" onclick="changeTime(0,4)">&gt;&gt;</div>
    <div class="_th-item _item-x-4" onclick="changeTime(0,-4)">&lt;&lt;</div>
    <div class="_th-item _item-reset" onclick="changeTime(0,0,false,true)">O</div>
</div>
<div class="_th_cover-all-show-times _th_hidden">
    <div class="_th_times">x1</div>
</div></div></body></html>